ALGORITHM SumOfDistinctElements;

VAR
    set1: array[1..4] of Integer = (3, 1, 7, 9);
    set2: array[1..5] of Integer = (2, 4, 1, 9, 3);
    distinctElements: array of Integer;
    sum: Integer;
    i, j: Integer;
    found: Boolean;

BEGIN
    sum := 0; 
    FOR i FROM 1 TO := Low(set1) to High(set1) STEP step DO
        found := False;
    END_FOR

    FOR j FROM 1 TO  := Low(distinctElements) to High(distinctElements) STEP step DO
    END_FOR

    IF (set1[i] = distinctElements[j]) THEN
       found := True;
       Break;
    END_IF

    IF (found=False) THEN
        SetLength(distinctElements, Length(distinctElements) + 1);
        distinctElements[High(distinctElements)] := set1[i];
        sum := sum + set1[i];
    END_IF

    FOR i FROM 1 TO  := Low(set2) to High(set2) STEP step DO
        found := False;
    END_FOR

    FOR j FROM 1 TO  := Low(distinctElements) to High(distinctElements) STEP step DO
    END_FOR

    IF set2[i] = distinctElements[j] THEN
        found := True;
    END_IF    

    IF (not found) THEN
            SetLength(distinctElements, Length(distinctElements) + 1);
            distinctElements[High(distinctElements)] := set2[i];
            sum := sum + set2[i];
    END_IF    

    Write('Output:', sum); // Output: 13

END
